---
import "@/styles/global.css"
import Header from "@/components/Header/Header.astro"
import { urlFromBase } from "@lib/utils"

const { pageTitle } = Astro.props
const base = import.meta.env.BASE_URL
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link
      rel="icon"
      type="image/svg+xml"
      href={urlFromBase(base, "/favicon.svg")}
    />
    <link
      rel="preload"
      href={urlFromBase(base, "/fonts/FiraCode-Regular.ttf")}
      as="font"
      type="font/ttf"
      crossorigin
    />
    <link
      rel="preload"
      href={urlFromBase(base, "/fonts/FiraCode-Bold.ttf")}
      as="font"
      type="font/ttf"
      crossorigin
    />
    <link
      rel="preload"
      href={urlFromBase(base, "/fonts/FiraCode-Medium.ttf")}
      as="font"
      type="font/ttf"
      crossorigin
    />
    <link rel="sitemap" href="/sitemap-index.xml" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <meta
      name="description"
      content="This is trifir3's blog. I'm a web developer and I share blog posts about web development."
    />
    <meta
      name="keywords"
      content="web, developer, code, css, javascript, typescript, frontend"
    />
    <meta
      name="google-site-verification"
      content="zXmkgOi37we-U7XyQlj0JSkmRhhSJdvN-7rCYgmv4-k"
    />
    <meta name="msvalidate.01" content="7D01EADDB835816EE6D1757AD3D9D230" />
    <title>{pageTitle}</title>
    <script is:inline>
      function init() {
        preloadTheme()

        const lightThemeButton = document.getElementById("light-theme-button")
        lightThemeButton?.addEventListener("click", () => {
          localStorage.setItem("theme", "light")
          toggleTheme(false)
        })

        const darkThemeButton = document.getElementById("dark-theme-button")
        darkThemeButton?.addEventListener("click", () => {
          localStorage.setItem("theme", "dark")
          toggleTheme(true)
        })

        const systemThemeButton = document.getElementById("system-theme-button")

        systemThemeButton?.addEventListener("click", () => {
          localStorage.setItem("theme", "system")
          toggleTheme(window.matchMedia("(prefers-color-scheme: dark)").matches)
        })

        window
          .matchMedia("(prefers-color-scheme: dark)")
          .addEventListener("change", (event) => {
            if (localStorage.theme === "system") {
              toggleTheme(event.matches)
            }
          })
      }

      function toggleTheme(dark) {
        const css = document.createElement("style")

        css.appendChild(
          document.createTextNode(
            `* {
             -webkit-transition: none !important;
             -moz-transition: none !important;
             -o-transition: none !important;
             -ms-transition: none !important;
             transition: none !important;
          }
        `
          )
        )

        document.head.appendChild(css)

        if (dark) {
          document.documentElement.classList.add("dark")
        } else {
          document.documentElement.classList.remove("dark")
        }

        window.getComputedStyle(css).opacity
        document.head.removeChild(css)
      }

      function preloadTheme() {
        const userTheme = localStorage.theme

        if (userTheme === "light" || userTheme === "dark") {
          toggleTheme(userTheme === "dark")
        } else {
          toggleTheme(window.matchMedia("(prefers-color-scheme: dark)").matches)
        }
      }

      document.addEventListener("DOMContentLoaded", () => init())
      document.addEventListener("astro:after-swap", () => init())
      preloadTheme()
    </script>
  </head>
  <body>
    <div class="mx-auto flex min-h-screen w-full max-w-(--breakpoint-lg) flex-col px-8">
      <Header />
      <div class="mt-32 grow">
        <slot />
      </div>
    </div>
  </body>
</html>
